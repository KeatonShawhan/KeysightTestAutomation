---
- name: Run “9 AM Monday” scenario on all farmslug Pis
  hosts: all
  gather_facts: no
  vars:
    # must be passed with --extra-vars or defaults below apply
    runners: 3
    test_plan: /home/pi/Baseline.TapPlan
    reg_token: CHANGE_ME
    repo_dir: ~/KeysightTestAutomation
    script: 9am_monday.sh
  tasks:

  - name: Ensure repo is up-to-date (git pull)
    ansible.builtin.shell: git -C {{ repo_dir }} pull --quiet
    changed_when: false

  - name: Run the 9 AM Monday script
    ansible.builtin.shell: |
      cd {{ repo_dir }}
      ./{{ script }} {{ runners }} {{ test_plan }} {{ reg_token }}
    async: 7200          # run up to 2 hours without blocking forks
    poll: 0
    register: job

  - name: Wait for script to finish
    ansible.builtin.async_status:
      jid: "{{ job.ansible_job_id }}"
    register: job_status
    until: job_status.finished
    retries: 720           # check every 10 s ⇒ 2 hours max
    delay: 10
  # ------------------------------------------------------------------
  # Pull a host-level summary from the newest metrics folder
  # ------------------------------------------------------------------

  - name: Compute per-host summary (fastest / slowest / avg runtime)
    ansible.builtin.shell: |
      metrics_root="$HOME/KeysightTestAutomation/metrics"
      latest="$(ls -1td "$metrics_root"/* 2>/dev/null | head -1)"
      if [ -z "$latest" ]; then
        printf "0,0,0" && exit 0
      fi
      awk -F',' '/runtime=/{split($0,a,"runtime="); sum+=a[2]; c++; \
                   if(min==""||a[2]<min){min=a[2]} \
                   if(a[2]>max){max=a[2]}} \
                   END{printf "%s,%s,%s", min,max,(c?sum/c:0)}' \
          "$latest"/*_metrics.log
    register: host_summary
    changed_when: false

  - name: Save numbers as a fact on THIS host
    ansible.builtin.set_fact:
      script_runtimes:
        fastest: "{{ host_summary.stdout.split(',')[0] | float }}"
        slowest: "{{ host_summary.stdout.split(',')[1] | float }}"
        average: "{{ host_summary.stdout.split(',')[2] | float }}"

  # ------------------------------------------------------------------
  # Just echo what this host stored (one line per host)
  # ------------------------------------------------------------------
  - name: Show raw summary_parsed on this host
    debug:
      var: script_runtimes
